/* vNet Example 2, Data Transmission

	Two nodes sends data via ethernet connection, they can be connected
	to a switch or cross-wired togheter.

	*************************Definitions*************************
	Configuration file		Parameter
	vNet_Config.h			#define VNET_SUPERNODE  	0
	vNet_Config.h			#define VNET_MEDIA1_ENABLE  1
	vNet_Config.h			#define VNET_MEDIA2_ENABLE  0
	vNet_Config.h			#define VNET_MEDIA3_ENABLE  0
	vNet_Config.h			#define VNET_MEDIA4_ENABLE  0
	vNet_Config.h			#define VNET_MEDIA5_ENABLE  0
	
	Define the ethernet controller based on the used hardware,
	ethUsrCfg.h				#define ETH_W5100/ENC28J60	1	
	
	ethUsrCfg.h				const uint8_t DEFAULT_BASEIPADDRESS[] = {...}
	ethUsrCfg.h				const uint8_t DEFAULT_SUBMASK[]       = {...}
	ethUsrCfg.h				const uint8_t DEFAULT_GATEWAY[]       = {...}
	ethUsrCfg.h				const uint8_t MAC_ADDRESS[]           = {...}	
	
	It's important define the proper MAC address for each board, two nodes
	that share the same MAC address will not communicate. You can found a
	proper MAC address on the sticker behind the board.

	As alternative to address the MAC for each board, the AUTO_MAC option can
	be used along with a Local MAC address. More details are available in
	ethUsrCfg.h configuration file.
	
	Only if debug on serial port is required,
	vNet_Config.h			#define VNET_DEBUG  		1
	
*/
#include "Souliss.h"
#include "Typicals.h"
#include <SPI.h>

// Message to sent over network
uint8_t msg1[12]={0,1,2,3,4,5,6,7,8,9,10,11};
uint8_t msg2[10]={0,1,2,3,4,5,6,7,8,9};

oFrame frame;

unsigned long time = 0;
uint8_t msg=0;

void setup()
{    
	vNet_Init_M5();
	vNet_SetAddress_M5(0xCE02);
	
	oFrame_Define(&frame);
}

void loop()
{ 
	// Run the stack
	vNet_DataAvailable_M5();

	if(millis()-time>10000)
	{
		if(!(msg%2))
		{		
			
			oFrame_Set(0, msg1, 0, 12, 0);
		
			// Send the two message on two different ports
			if(!vNet_Send_M5(0xCE01, &frame, 12));
				
		}
		else
		{	
			oFrame_Set(0, msg2, 0, 10+1, 0);
		
			if(!vNet_Send_M5(0xCE01, &frame, 10));
				
		}
		
		msg++;
		time = millis();	
	}
		
    delay(50);
    
}